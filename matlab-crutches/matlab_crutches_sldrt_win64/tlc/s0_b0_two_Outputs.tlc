%implements s0_b0_two_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS0B0 = OpaqueTLCBlockFcn("Outputs", 0, 0, 0, 2, 0)
%assign tlcOutputsFcnOfS0B1 = OpaqueTLCBlockFcn("Outputs", 0, 1, 0, 2, 1)
%assign tlcOutputsFcnOfS0B2 = OpaqueTLCBlockFcn("Outputs", 0, 2, 0, 2, 2)
%<SLibGenerateExtModeOutput(system)>
%if !WHITE_SPACE(tlcOutputsFcnOfS0B0)
/* {S!d56}M-S-Function: '<Root>/Serial Configuration' */
%<tlcOutputsFcnOfS0B0>\
%endif
if (%<(SLibCGIRIsSampleHit(2, 0))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS0B1)
    /* {S!d58}M-S-Function: '<Root>/Serial Receive' */
%<tlcOutputsFcnOfS0B1>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS0B2)
    /* {S!d60}Scope: '<Root>/Scope' */
%<tlcOutputsFcnOfS0B2>\
%endif
}
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 2, fcnProtoType)>
%endfunction
